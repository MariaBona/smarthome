syntax = "proto3";

package smarthome;

// Collects information about devices on the system
service RegistryService {
    rpc registerDevice(RegisterDeviceRequest) returns (RegisterDeviceResponse) {} // Register a device in the system
    rpc deviceStatus(stream DeviceStatusRequest) returns (stream DeviceStatusResponse) {} // Stream device status to the Main Controller
}

// Device enum is used to distinguish device types
enum DeviceType {
    DEVICE_UNKNOWN = 0; // Device type not set
    DEVICE_THERMOSTAT = 1; // Thermostat device
}

message RegisterDeviceRequest {
    string name = 1; // Requested name set to a thermostat client
    DeviceType device = 2; // what kind of device the client device is
}

message RegisterDeviceResponse {
    string new_name = 1; // New name to distinguish between different devices of the same type
    uint32 id = 2; // individual id of the client device in the smarthome
}

// Stream device status
message DeviceStatusRequest {
    uint32 device_id = 1;
    string device_name = 2;
    DeviceType device_type = 3;
    optional GetTempResponse thermostat = 4; // this will be populated if device_type is DEVICE_THERMOSTAT
}

message DeviceStatusResponse {

}

// Thermostat device/service
service ThermostatService {
    rpc setTemp(SetTempRequest) returns (SetTempResponse) {} // Unary gRPC service to set target temperature
    rpc getTemp(GetTempRequest) returns (stream GetTempResponse) {} // Server side streaming get temperature stream request
}

// Main Controller can request target temperature on a thermostat device
message SetTempRequest {
    double temperature = 1;
    uint32 duration = 2;
}

// Response to SetTempRequest
message SetTempResponse {
    double set_temperature = 1;
    double current_temperature = 2;
    bool requesting_heat = 3;
}

// Request temperature updates from thermostat
message GetTempRequest {
}

// Response to GetTempRequest
message GetTempResponse {
    double target_temperature = 1; // Target temperature for the thermostat
    double current_temperature = 2; // Current room temperature
    bool requesting_heat = 3; // If the thermostat is requesting heat
    uint32 time_left = 4; // Time left on the target temperature, after that it will return to default setting on the termostat
}
